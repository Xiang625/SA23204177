// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// T_nC
double T_nC(double r, int n1, const Eigen::MatrixXd& YY, int m);
RcppExport SEXP _SA23204177_T_nC(SEXP rSEXP, SEXP n1SEXP, SEXP YYSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type YY(YYSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(T_nC(r, n1, YY, m));
    return rcpp_result_gen;
END_RCPP
}
// Wang2020C
bool Wang2020C(const Eigen::MatrixXd& sam, int m, int n);
RcppExport SEXP _SA23204177_Wang2020C(SEXP samSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type sam(samSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(Wang2020C(sam, m, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SA23204177_T_nC", (DL_FUNC) &_SA23204177_T_nC, 4},
    {"_SA23204177_Wang2020C", (DL_FUNC) &_SA23204177_Wang2020C, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_SA23204177(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
